{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selection.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/ContactsListItem/ContactsListItem.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["saveContactAction","createAction","name","number","payload","id","uuidv4","deleteContactAction","updateFilterAction","contactsReduser","createReducer","actions","state","action","filter","contact","filterReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","Container","title","children","className","getContactsReducer","getFilterReducer","useForm","useState","Form","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","target","value","reset","onSubmit","preventDefault","find","alert","contactsActions","type","pattern","required","onChange","ContactsList","ContactsListItem","contactsReducer","toLowerCase","includes","map","onClick","onDeleteButtonClick","Filter","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.087e16a3.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst saveContactAction = createAction(\"saveConntact\", (name, number) => ({\r\n  payload: { id: uuidv4(), name, number },\r\n}));\r\nconst deleteContactAction = createAction(\"deleteConntact\");\r\nconst updateFilterAction = createAction(\"updateFilter\");\r\n\r\nexport default { saveContactAction, deleteContactAction, updateFilterAction };","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst initialContactsState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst contactsReduser = createReducer(initialContactsState, {\r\n  [actions.saveContactAction]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [actions.deleteContactAction]: (state, action) => {\r\n    return state.filter((contact) => contact.id !== action.payload);\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.updateFilterAction]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nexport default combineReducers({ contactsReduser, filterReducer });","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport reducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, reducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import \"./Container.css\";\r\nconst Container = ({ title, children }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"title\">{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Container;\r\n","export const getContactsReducer = (state) => state.contacts.contactsReduser;\r\n\r\nexport const getFilterReducer = (state) => state.contacts.filterReducer;","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./Form.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { getContactsReducer } from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst useForm = (key) => {\r\n  const [state, setState] = useState(\"\");\r\n\r\n  return [state, setState];\r\n};\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useForm(\"name\");\r\n  const [number, setNumber] = useForm(\"number\");\r\n  const contacts = useSelector(getContactsReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(contactsActions.saveContactAction(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label className=\"label\">\r\n          Name\r\n          <input\r\n            className=\"input\"\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Nuber\r\n          <input\r\n            className=\"input\"\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const ContactsList = ({ children }) => {\r\n  return <ul>{children}</ul>;\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./ContactsListItem.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport {\r\n  getContactsReducer,\r\n  getFilterReducer,\r\n} from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst ContactsListItem = () => {\r\n  const contacts = useSelector((state) => {\r\n    const contactsReducer = getContactsReducer(state);\r\n    const filterReducer = getFilterReducer(state);\r\n    const visibleContacts = contactsReducer.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterReducer.toLowerCase())\r\n    );\r\n    return visibleContacts;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const onDeleteButtonClick = (id) =>\r\n    dispatch(contactsActions.deleteContactAction(id));\r\n\r\n  return contacts.map(({ id, name, number }) => (\r\n    <li className=\"listItem\" key={id}>\r\n      {name}:{number}\r\n      <button className=\"button\" onClick={() => onDeleteButtonClick(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default ContactsListItem;","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./Filter.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilterReducer } from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilterReducer);\r\n  const dispatch = useDispatch();\r\n  const onChange = (e) =>\r\n    dispatch(contactsActions.updateFilterAction(e.target.value));\r\n  return (\r\n    <label className=\"label\">\r\n      Find contacts by name\r\n      <input className=\"input\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\n\nimport Container from \"./components/Container\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/ContactsList\";\nimport ContactsListItem from \"./components/ContactsListItem\";\nimport Filter from \"./components/Filter\";\n\nfunction App() {\n  return (\n    <>\n      <Container title=\"Phonebook\">\n        <Form />\n      </Container>\n      <Container title=\"Contacts\">\n        <Filter />\n        <ContactsList>\n          <ContactsListItem />\n        </ContactsList>\n      </Container>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport store from \"./redux/store\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}